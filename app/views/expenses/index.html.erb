<h1 style="text-align:center;">Résumé des dépenses</h1>

<div style="display:flex; flex-direction:column; align-items:center; gap:20px; margin-bottom:20px;">

  <!-- Formulaire de filtre -->
  <div style="margin-bottom:20px;">
    <%= form_with url: expenses_path, method: :get, local: true, class: "form-inline" do %>
      <label>Du : </label>
      <%= date_field_tag :start_date, params[:start_date] || 1.month.ago.to_date, class: "form-control mx-2" %>
      <label>Au : </label>
      <%= date_field_tag :end_date, params[:end_date] || Date.today, class: "form-control mx-2" %>
      <%= submit_tag "Filtrer", class: "btn btn-primary mx-2" %>
      <%= link_to "Réinitialiser", expenses_path, class: "btn btn-secondary" %>
    <% end %>
  </div>

  <!-- Pie chart -->
  <div style="width:400px; height:400px;">
    <canvas id="expensesChart"></canvas>
  </div>

  <!-- Boutons -->
  <div style="display:flex; gap:20px;">
    <%= link_to "Ajouter une dépense", new_expense_path, class: "btn btn-primary" %>
    <%= link_to "Gérer les catégories", categories_path, class: "btn btn-secondary" %>
  </div>
</div>

<!-- Tableau des dépenses -->
<div style="width:90%; max-width:900px; margin:auto;">
  <table class="table table-striped">
    <thead>
      <tr>
        <th>Catégorie</th>
        <th>Description</th>
        <th>Montant</th>
        <th>Date</th>
        <th>Actions</th>
      </tr>
    </thead>
    <tbody>
      <% @expenses.each do |expense| %>
        <tr data-expense-id="<%= expense.id %>">
          <td><%= expense.category&.name || "Default" %></td>
          <td><%= expense.description %></td>
          <td><%= number_to_currency(expense.amount) %></td>
          <td><%= expense.date %></td>
          <td>
            <%= link_to "Éditer", edit_expense_path(expense), class: "btn btn-sm btn-warning" %>
            <button class="btn btn-sm btn-danger delete-expense" data-id="<%= expense.id %>">Supprimer</button>
        </tr>
      <% end %>
    </tbody>
  </table>
</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
document.addEventListener("turbo:load", function() {
  const canvas = document.getElementById("expensesChart");
  if (!canvas) return;

  let expensesData = <%= raw @expenses_by_category.to_json %>;
  const categories = <%= raw current_user.categories.to_json(only: [:name, :color]) %>;

  function renderChart(dataObj) {
    const ctx = canvas.getContext("2d");
    const labels = Object.keys(dataObj);
    const data = Object.values(dataObj);
    const colors = labels.map(label => {
      const cat = categories.find(c => c.name === label);
      return cat ? cat.color : "#E0E0E0";
    });

    if (window.expensesChart instanceof Chart) {
      window.expensesChart.destroy();
    }

    window.expensesChart = new Chart(ctx, {
      type: 'pie',
      data: { labels, datasets: [{ data, backgroundColor: colors, borderColor:'#fff', borderWidth:2 }] },
      options: {
        responsive:true,
        plugins:{
          legend:{position:'bottom'},
          tooltip:{
            callbacks:{
              label:function(context){
                const value = context.raw;
                const total = data.reduce((a,b)=>a+b,0);
                const percent = ((value/total)*100).toFixed(1);
                return `${context.label}: ${value} (${percent}%)`;
              }
            }
          }
        },
        animation:{ animateRotate:true, animateScale:true, duration:1200 }
      }
    });
  }

  renderChart(expensesData);

  function attachDeleteEvents() {
    document.querySelectorAll(".delete-expense").forEach(btn => {
      btn.onclick = function() {
        if(!confirm("Voulez-vous vraiment supprimer ?")) return;

        const id = this.dataset.id;
        fetch(`/expenses/${id}`, {
          method: "DELETE",
          headers: {
            "X-CSRF-Token": document.querySelector('meta[name="csrf-token"]').content,
            "Accept": "application/json"
          }
        })
        .then(res => res.json())
        .then(data => {
          if(data.success) {
            // Mettre à jour le tableau
            const tbody = document.querySelector("table tbody");
            tbody.innerHTML = "";
            data.expenses.forEach(exp => {
              const tr = document.createElement("tr");
              tr.innerHTML = `
                <td>${exp.category ? exp.category.name : "Default"}</td>
                <td>${exp.description}</td>
                <td>${parseFloat(exp.amount).toFixed(2)}</td>
                <td>${exp.date}</td>
                <td>
                  <a href="/expenses/${exp.id}/edit" class="btn btn-sm btn-warning">Éditer</a>
                  <button class="btn btn-sm btn-danger delete-expense" data-id="${exp.id}">Supprimer</button>
                </td>
              `;
              tbody.appendChild(tr);
            });
            attachDeleteEvents(); // réattacher les événements
            renderChart(data.expenses_by_category); // mettre à jour le chart
          } else {
            alert("Erreur lors de la suppression !");
          }
        });
      }
    });
  }

  attachDeleteEvents();
});

</script>
